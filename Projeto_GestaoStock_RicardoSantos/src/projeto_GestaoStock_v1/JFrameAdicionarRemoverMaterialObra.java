/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projeto_GestaoStock_v1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author ricardo
 */
public class JFrameAdicionarRemoverMaterialObra extends javax.swing.JFrame {

    /**
     * Creates new form JFrameAdicionarRemoverMaterialObra
     */
    public JFrameAdicionarRemoverMaterialObra() {
        initComponents();
        setResizable(false);
        try{
         
            PopularComboBoxObra();
            PopularComboBoxArmazem();
          
        } 
        catch (Exception e){
            System.out.println("Erro ao Inicializar: " + e.getMessage());
        }
    }
    
    private void PopularComboBoxObra() 
    {
        jComboBoxIDObra.removeAllItems(); // Limpa todos os itens do ComboBox
        try (Connection conn = DriverManager.getConnection("jdbc:mariadb://localhost:3306/BDGestaoStock?user=root");
            Statement stat = conn.createStatement()) {

           ResultSet resultadoQuery = stat.executeQuery("select id_obra, localizacao_obr from Obras");

           while (resultadoQuery.next()) {
               String item = resultadoQuery.getString("id_obra") + "-" 
                       + resultadoQuery.getString("localizacao_obr");
               jComboBoxIDObra.addItem(item);
           }
        } 
        catch (Exception e) {
            System.out.println("Erro ao popular combo box de Obras: " + e.getMessage());
        }
    }
    
    private void PopularComboBoxMaterial() 
    {
            jComboBoxIDMaterial.removeAllItems(); // Limpa todos os itens do ComboBox
        try (Connection conn = DriverManager.getConnection("jdbc:mariadb://localhost:3306/BDGestaoStock?user=root");
             Statement stat = conn.createStatement()) {

            String selectedArmazem = jComboBoxIDarmazem.getSelectedItem().toString().split("-")[0]; // Obtém o ID do armazém selecionado

            // Consulta SQL para selecionar materiais disponíveis apenas no armazém escolhido
            String query = "Select m.id_material, m.nome " +
                           "From Material m " +
                           "Inner Join Material_Armazem ma On m.id_material = ma.id_material_amz " +
                           "Where ma.id_armazem_amz = '" + selectedArmazem + "'";

            ResultSet resultadoQuery = stat.executeQuery(query);

            while (resultadoQuery.next()) {
                String item = resultadoQuery.getString("id_material") + "-"
                        + resultadoQuery.getString("nome");
                jComboBoxIDMaterial.addItem(item);
            }
        } 
        catch (Exception e) {
            System.out.println("Erro ao popular combo box de Material: " + e.getMessage());
        }
    }
    
    private void PopularComboBoxArmazem() 
    {
        jComboBoxIDarmazem.removeAllItems(); // Limpa todos os itens do ComboBox
        try (Connection conn = DriverManager.getConnection("jdbc:mariadb://localhost:3306/BDGestaoStock?user=root");
            Statement stat = conn.createStatement()) {

           ResultSet resultadoQuery = stat.executeQuery("select ma.id_armazem_amz, a.nome_amz "
                   + "from Material_Armazem ma "
                   + "Join Armazens a On ma.id_armazem_amz = a.id_armazem");

           while (resultadoQuery.next()) {
               String item = resultadoQuery.getString("id_armazem_amz") + "-" + resultadoQuery.getString("nome_amz");
               jComboBoxIDarmazem.addItem(item);
           }
        } 
        catch (Exception e) {
            System.out.println("Erro ao popular combo box de Armazem: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxIDMaterial = new javax.swing.JComboBox<>();
        jComboBoxIDObra = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jButtonGravar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxIDarmazem = new javax.swing.JComboBox<>();
        jButtonAtualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Adicionar ou Remover matrial de Obra ");
        setAlwaysOnTop(true);

        jPanel1.setBackground(new java.awt.Color(255, 153, 51));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID Material:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID Obra:");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Quantidade :");

        jButtonGravar.setText("Gravar");
        jButtonGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravarActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ID Armazem:");

        jComboBoxIDarmazem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxIDarmazemActionPerformed(evt);
            }
        });

        jButtonAtualizar.setText("Atualizar");
        jButtonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(32, 32, 32)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                            .addComponent(jComboBoxIDObra, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGap(26, 26, 26)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jComboBoxIDarmazem, 0, 202, Short.MAX_VALUE)
                                .addComponent(jComboBoxIDMaterial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxIDObra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxIDarmazem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxIDMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void LimparCampos()
    {
       
       
        jSpinner1.setValue(0);
        jComboBoxIDMaterial.setSelectedIndex(0);
        jComboBoxIDObra.setSelectedIndex(0);

    }
    
    
    private void jButtonGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravarActionPerformed
        try (Connection conn = DriverManager.getConnection("jdbc:mariadb://localhost:3306/BDGestaoStock?user=root");
            Statement stat = conn.createStatement()) {

            String idMaterial = jComboBoxIDMaterial.getSelectedItem().toString().split("-")[0];
            String idObra = jComboBoxIDObra.getSelectedItem().toString().split("-")[0];
            int quantidade = (int) jSpinner1.getValue();
            
            
                // Verificar se a quantidade desejada não excede a quantidade disponível no armazém selecionado
            if (!validarQuantidadeDisponivel(idMaterial, quantidade)) {
                JOptionPane.showMessageDialog(this, "Quantidade desejada superior à quantidade "
                        + "disponível no armazém!", "Erro", JOptionPane.ERROR_MESSAGE);
                return; // Se a validação falhar, não continue com a inserção
            }
            
            
            // Inserir novo registro na tabela Material_Armazem
            String insertQuery = "insert into Material_Obra (id_material_obr, id_obra_obr, quantidade_utilizada )"
                    + " values ('" + idMaterial + "', '" + idObra + "', '" + quantidade + "')";

            stat.executeUpdate(insertQuery);
            
            // Atualizar a quantidade disponível na tabela Material_Armazem (diminuir a quantidade usada)
            String updateQuery = "Update Material_Armazem " +
                             "Set quantidade = quantidade - " + quantidade + " " +
                             "Where id_material_amz = '" + idMaterial + "' " +
                             "And id_armazem_amz = '" + jComboBoxIDarmazem.getSelectedItem().toString().split("-")[0] + "'";

            stat.executeUpdate(updateQuery);
            

            JOptionPane.showMessageDialog(this, "Quantidade do material foi inserida "
                    + "com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            LimparCampos();
            PopularComboBoxMaterial();
            PopularComboBoxObra();
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao inserir quantidade "
                    + "do material: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            LimparCampos();
        }
    }//GEN-LAST:event_jButtonGravarActionPerformed

    private void jComboBoxIDarmazemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxIDarmazemActionPerformed
        try{

            PopularComboBoxMaterial();
        } 
        catch (Exception e){
            System.out.println("Erro ao Popular ComboboxMaterial: " + e.getMessage());
        }
    
    }//GEN-LAST:event_jComboBoxIDarmazemActionPerformed

    private void jButtonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarActionPerformed
        PopularComboBoxObra();
        jComboBoxIDObra.revalidate(); // Revalida a combobox para refletir as mudanças
        jComboBoxIDObra.repaint(); // Força a repintura da combobox para atualização visual
        PopularComboBoxArmazem();
        jComboBoxIDarmazem.revalidate();
        jComboBoxIDarmazem.repaint();
        LimparCampos();
    }//GEN-LAST:event_jButtonAtualizarActionPerformed
    private boolean validarQuantidadeDisponivel(String idMaterial, int quantidadeDesejada) {
    try (Connection conn = DriverManager.getConnection("jdbc:mariadb://localhost:3306/BDGestaoStock?user=root");
         Statement stat = conn.createStatement()) {

        String idArmazem = jComboBoxIDarmazem.getSelectedItem().toString().split("-")[0];

        // Consulta para obter a quantidade disponível do material no armazém selecionado
        String query = "Select quantidade " +
                       "From Material_Armazem " +
                       "Where id_material_amz = '" + idMaterial + "' " +
                       "And id_armazem_amz = '" + idArmazem + "'";

        ResultSet resultadoQuery = stat.executeQuery(query);

        if (resultadoQuery.next()) {
            int quantidadeDisponivel = resultadoQuery.getInt("quantidade");
            return quantidadeDesejada <= quantidadeDisponivel; // Retorna true se a quantidade desejada for menor ou igual à disponível
        }
    } catch (Exception e) {
        System.out.println("Erro ao validar quantidade disponível: " + e.getMessage());
    }
    return false; // Em caso de erro ou se não encontrar o registro, retorna false por segurança
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameAdicionarRemoverMaterialObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameAdicionarRemoverMaterialObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameAdicionarRemoverMaterialObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameAdicionarRemoverMaterialObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameAdicionarRemoverMaterialObra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAtualizar;
    private javax.swing.JButton jButtonGravar;
    private javax.swing.JComboBox<String> jComboBoxIDMaterial;
    private javax.swing.JComboBox<String> jComboBoxIDObra;
    private javax.swing.JComboBox<String> jComboBoxIDarmazem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables
}
